{"version":3,"sources":["styles/mixin.ts","components/common/Loading.tsx","components/common/Spinner.tsx","components/todo/TodoService.tsx","components/todo/template/TodoTemplate.tsx","utils/constants.ts","components/todo/template/head/TodoHead.tsx","components/todo/template/list/item/TodoItem.tsx","components/todo/template/list/TodoList.tsx","utils/disabledDate.ts","components/todo/template/create/TodoCreate.tsx","components/todo/template/footer/TodoFooter.tsx","components/todo/TodoContainer.tsx","App.tsx","index.js"],"names":["mixin","flexSet","justify","items","direction","css","Loading","props","LoadingOutlined","style","fontSize","size","spin","StyledSpinnerWrapper","styled","Row","styleProps","Spinner","tip","delay","mask","className","align","data-mask","indicator","defaultProps","initialTodos","useTodo","useState","todoState","setTodoState","nextIdState","setNextIdState","useEffect","loadData","saveData","data","localStorage","getItem","undefined","JSON","parse","length","MaxId","i","Math","max","id","loadNextId","setItem","stringify","incrementNextId","prevId","toggleTodo","todoToggle","filter","todo","done","todoList","concat","sort","o1","o2","removeTodo","prevState","createTodo","TodoTemplateBlock","div","React","memo","children","months","days","TodoHeadBlock","Wrap","DateText","DayText","TimeText","Date","now","setNow","day","getDay","month","getMonth","date","getDate","year","getFullYear","hour","getHours","toString","minute","getMinutes","seconds","getSeconds","setTimeout","getNow","setDone","TodoItemBlock","CheckCircle","onClick","CheckOutlined","Text","text","DueDate","dueDate","Remove","Modal","confirm","title","content","okType","okText","cancelText","onOk","DeleteOutlined","TodoListBlock","todos","map","key","disabledDate","current","moment","endOf","nextId","open","setOpen","value","setValue","today","format","setDueDate","InsertFormPositioner","InsertForm","onSubmit","e","preventDefault","warning","Input","autoFocus","placeholder","onChange","target","CustomDatePicker","allowClear","dateString","CircleButton","PlusCircleOutlined","button","form","input","DatePicker","TodoFooterBlock","LeftText","undoneTasks","TodoContainer","TodoFooter","App","GlobalStyle","createGlobalStyle","ReactDOM","render","theme","document","getElementById"],"mappings":"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","file":"static/js/main.dfcb2da0.chunk.js","sourcesContent":["import { css } from 'styled-components';\r\n\r\nconst flexSet = (\r\n    justify = 'center',\r\n    items = 'center',\r\n    direction = 'row',\r\n) => css`\r\n  display: flex;\r\n  justify-content: ${justify};\r\n  align-items: ${items};\r\n  flex-direction: ${direction};\r\n`;\r\n\r\nconst mixin = { flexSet };\r\n\r\nexport default mixin;","import React, { ReactElement } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { SpinSize } from 'antd/lib/spin';\n\ninterface ILoadingProps {\n\tsize?: SpinSize;\n\tstyle?: React.CSSProperties;\n}\n\nexport default function Loading(props: ILoadingProps): ReactElement {\n\treturn <LoadingOutlined style={{ fontSize: props.size === 'large' ? 48 : 24, ...props.style }} spin />;\n}\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { Spin, Row, Col } from 'antd';\nimport { SpinSize } from 'antd/lib/spin';\n\nimport Loading from './Loading';\n\ninterface ISpinnerProps {\n\ttip?: string;\n\tsize?: SpinSize;\n\tdelay?: number;\n\tstyle?: React.CSSProperties;\n\tmask?: boolean;\n}\n\ninterface IWrapperProp {\n\treadonly ['data-mask']: boolean;\n}\n\nconst StyledSpinnerWrapper = styled(Row)<IWrapperProp>`\n\tbackground-color: ${styleProps => (styleProps['data-mask'] ? 'rgba(0, 0, 0, 0.1)' : 'transparent')};\n`;\n\nfunction Spinner(props: ISpinnerProps): ReactElement {\n\tconst { tip, size, delay, style, mask = false } = props;\n\n\treturn (\n\t\t<StyledSpinnerWrapper className=\"spinner-wrap\" justify=\"center\" align=\"middle\" style={style} data-mask={mask}>\n\t\t\t<Col>\n\t\t\t\t<Spin indicator={<Loading size={size} />} delay={delay} tip={tip} size={size} />\n\t\t\t</Col>\n\t\t</StyledSpinnerWrapper>\n\t);\n}\n\nSpinner.defaultProps = {\n\ttip: '로딩중입니다.',\n\tsize: 'large',\n\tdelay: 0,\n\tstyle: {},\n\tmask: false,\n};\n\nexport default Spinner;\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport type Itodo = {\r\n  id: number;\r\n  text: string;\r\n  done: boolean;\r\n  dueDate:string;\r\n};\r\n\r\nlet initialTodos: Itodo[] = [];\r\n\r\nexport const useTodo = () => {\r\n  const [todoState, setTodoState] = useState(initialTodos);\r\n  const [nextIdState, setNextIdState] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveData();\r\n  }, [todoState]);\r\n\r\n  const loadNextId = (initialTodos : Itodo[]) => {\r\n    let MaxId = 0;\r\n    for(let i=0; i<initialTodos.length; i++) {\r\n      MaxId = Math.max(MaxId, initialTodos[i].id);\r\n    }\r\n\r\n    setNextIdState(MaxId + 1);\r\n  }\r\n  const incrementNextId = () => {\r\n    setNextIdState((prevId) => prevId + 1);\r\n  };\r\n\r\n  const toggleTodo = (id: number) => {\r\n    //@TODO\r\n    const todoToggle = todoState.filter((todo:Itodo) => todo.id === id);\r\n    todoToggle[0].done ? todoToggle[0].done = false : todoToggle[0].done = true;\r\n    \r\n    const undoList = todoState.filter((todo:Itodo) => todo.id !== id);\r\n    const todoList = undoList.concat(todoToggle);\r\n    \r\n    todoList.sort( (o1, o2) => o1.id - o2.id);\r\n    setTodoState(todoList);\r\n  };\r\n\r\n  const removeTodo = (id: number) => {\r\n    setTodoState((prevState) =>\r\n      prevState.filter((todo: Itodo) => todo.id !== id)\r\n    );\r\n  };\r\n\r\n  const createTodo = (todo: Itodo) => {\r\n    setTodoState((prevState) =>\r\n      prevState.concat({\r\n        ...todo,\r\n        id: nextIdState\r\n      })\r\n    );\r\n  };\r\n\r\n  const loadData = () => {\r\n    let data = localStorage.getItem(\"todos\");\r\n    if (data === undefined) data = \"\";\r\n    initialTodos = JSON.parse(data!);\r\n    if (initialTodos && initialTodos.length >= 1) {\r\n      loadNextId(initialTodos);\r\n    }\r\n    setTodoState(initialTodos);\r\n  };\r\n\r\n  const saveData = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todoState));\r\n  };\r\n\r\n  return {\r\n    todoState,\r\n    nextIdState,\r\n    incrementNextId,\r\n    toggleTodo,\r\n    removeTodo,\r\n    createTodo\r\n  };\r\n};\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplateBlock = styled.div`\n  width: 70%;\n  height: 800px;\n\n  min-width: 360px;\n  max-width: 700px;\n\n  position: relative;\n  background: white;\n  border-radius: 30px;\n  box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.1);\n\n  margin: 0 auto;\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate(props: any) {\n  return <TodoTemplateBlock>{props.children}</TodoTemplateBlock>;\n}\n\nexport default React.memo(TodoTemplate);\n","export const months = [   \r\n  'January',\r\n  'Febuary',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nexport const days = [ \r\n  'Sunday',\r\n  'Mondy',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\nexport const dateFormat = 'YYYY-MM-DD';","import { getTimeProps } from \"antd/lib/date-picker/generatePicker\";\nimport React,{useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport {days, months} from \"utils/constants\";\n\nconst TodoHeadBlock = styled.div`\n  display: inline-block;\n  justify-content: center;\n  padding-top: 52px;\n  padding-bottom: 24px;\n  border-bottom: 3px solid #33bb77;\n`;\nconst Wrap = styled.div`\n  display: flex;\n  place-content: center;\n`;\n\nconst DateText = styled.div`\n  font-size: 26px;\n  color: #119955;\n  padding-left: 10px;\n`;\n\nconst DayText = styled.div`\n  font-size: 22px;\n  color: #119955;\n  padding-top: 5px;\n`;\n\nconst TimeText = styled.div`\n  font-size: 15px;\n  color: #105f777d;\n  padding-top: 10px;\n`;\n\nconst TodoHead = () => {\n  //@TODO 현재 시간을 표시해야합니다.\n  const [now, setNow] = useState(new Date());\n  const day : string = days[now.getDay()];\n  const month : string = months[now.getMonth()];\n  const date : number = now.getDate();\n  const year : number = now.getFullYear();\n  let hour : string = now.getHours().toString().length < 2 ? '0'+now.getHours().toString() : now.getHours().toString();\n  let minute : string = now.getMinutes().toString().length < 2 ? '0'+now.getMinutes().toString() : now.getMinutes().toString();\n  let seconds : string = now.getSeconds().toString().length < 2 ? '0'+now.getSeconds().toString() : now.getSeconds().toString();\n\n  useEffect(() => {\n    setTimeout(()=> getNow(), 1000)\n  }, [now])\n  const getNow = () => {\n    setNow(new Date());\n  }\n  \n  return (\n    <TodoHeadBlock>\n      <Wrap>\n        <DayText>{day}</DayText>\n        <DateText>{month} {date}, {year}</DateText>\n      </Wrap>\n      <Wrap>\n        <TimeText>{hour} : {minute} : {seconds}</TimeText>\n      </Wrap>\n    </TodoHeadBlock>\n  );\n};\n\nexport default React.memo(TodoHead);\n","import { CheckOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Itodo } from \"components/todo/TodoService\";\r\nimport React, {useState} from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {Modal} from 'antd';\r\n\r\ninterface TodoItemProps {\r\n  toggleTodo: (id: number) => void;\r\n  removeTodo: (id: number) => void;\r\n  todo: Itodo;\r\n}\r\n\r\nconst TodoItem = ({ toggleTodo, removeTodo, todo }: TodoItemProps) => {\r\n  const [done, setDone] = useState(todo.done);\r\n  const handleToggle = () => {\r\n    done ? setDone(false) : setDone(true);\r\n    toggleTodo(todo.id);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    removeTodo(todo.id);\r\n  };\r\n\r\n  const confirmRemove = () => {\r\n    Modal.confirm({\r\n      title: '할일 삭제',\r\n      content: `${todo.text}를 삭제하시겠습니까?`,\r\n      okType: 'danger',\r\n      okText: '삭제',\r\n      cancelText: '취소',\r\n      onOk: () => handleRemove()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={handleToggle}>\r\n        {done && <CheckOutlined />}\r\n      </CheckCircle>\r\n      <Text done={done}>{todo.text}</Text>\r\n      <DueDate done={done}>{todo.dueDate}</DueDate>\r\n      <Remove onClick={confirmRemove}>\r\n        <DeleteOutlined />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoItem);\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #119955;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div<{ done: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 16px;\r\n  border: 1px solid #33bb77;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #dddddd;\r\n      color: #dddddd;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div<{ done: boolean }>`\r\n  flex : 1;\r\n  font-size: 16px;\r\n  color: #119955;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nconst DueDate = styled.div<{ done: boolean }>`\r\n  padding-right: 30px;\r\n  font-size: 16px;\r\n  color: #bd1616;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n      text-decoration: line-through;\r\n    `}\r\n`;","import { Itodo } from \"components/todo/TodoService\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoItem from \"./item/TodoItem\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n`;\r\n\r\ninterface TodoListProps {\r\n  todos: Itodo[];\r\n  toggleTodo: (id: number) => void;\r\n  removeTodo: (id: number) => void;\r\n}\r\n\r\nconst TodoList = ({ toggleTodo, removeTodo, todos }: TodoListProps) => {\r\n  return (\r\n    <TodoListBlock>\r\n      {todos &&\r\n        todos.map((todo) => (\r\n          <TodoItem\r\n            toggleTodo={toggleTodo}\r\n            removeTodo={removeTodo}\r\n            key={todo.id}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n    </TodoListBlock>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import moment from 'moment';\r\n\r\nexport default function disabledDate(current : object) {\r\n  // Can not select days before today and today\r\n  return current && current < moment().endOf('day');\r\n}","import React, { useState,useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Itodo } from \"components/todo/TodoService\";\nimport {DatePicker, Modal} from 'antd';\nimport moment from 'moment';\nimport {dateFormat} from 'utils/constants';\nimport disabledDate from 'utils/disabledDate';\ninterface TodoCreateProps {\n  nextId: number;\n  createTodo: (todo: Itodo) => void;\n  incrementNextId: () => void;\n}\n\nconst TodoCreate = ({\n  nextId,\n  createTodo,\n  incrementNextId\n}: TodoCreateProps) => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const today = moment().format(dateFormat);\n  const [dueDate, setDueDate] = useState(today);\n\n  const handleDate = (value: any, dateString: string) => {\n    setDueDate(dateString);\n  }\n\n  const handleToggle = () => setOpen(!open);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(e.target.value);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault(); // 새로고침 방지\n    if(value === '') {\n      Modal.warning({\n        title : '입력 오류',\n        content: `빈 값은 입력할 수 없습니다.`,\n      })\n      return;\n    }\n    createTodo({\n      id: nextId,\n      text: value,\n      done: false,\n      dueDate:dueDate\n    });\n    incrementNextId(); // nextId 하나 증가\n\n    setValue(\"\"); // input 초기화\n    setOpen(false); // open 닫기\n  };\n\n  return (\n    <>\n      <InsertFormPositioner>\n        <InsertForm onSubmit={handleSubmit}>\n          <Input\n            autoFocus\n            placeholder=\"What's need to be done?\"\n            onChange={handleChange}\n            value={value}\n          />\n          <CustomDatePicker \n            allowClear={false}\n            placeholder=\"Due date\"\n            onChange={handleDate}\n            value={moment(dueDate)}\n            format={dateFormat}\n            disabledDate= {disabledDate}\n          />\n          <CircleButton onClick={handleToggle} open={open}>\n            <PlusCircleOutlined />\n          </CircleButton>\n        </InsertForm>\n      </InsertFormPositioner>\n    </>\n  );\n};\n\nexport default React.memo(TodoCreate);\n\nconst CircleButton = styled.button<{ open: boolean }>`\n  background: #33bb77;\n  width: 50px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  left: 50%;\n  transform: translate(50%, 0%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #eeeeee;\n`;\n\nconst InsertForm = styled.form`\n  display: flex;\n  background: #eeeeee;\n  padding-left: 40px;\n  padding-top: 36px;\n  padding-right: 60px;\n  padding-bottom: 36px;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #dddddd;\n  width: 100%;\n  outline: none;\n  font-size: 21px;\n  box-sizing: border-box;\n  color: #119955;\n  &::placeholder {\n    color: #dddddd;\n    font-size: 16px;\n  }\n`;\n\nconst CustomDatePicker = styled(DatePicker)`\n  width : 35%;\n`;","import { Itodo } from \"components/todo/TodoService\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoFooterBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst LeftText = styled.div`\n  color: #33bb77;\n  font-size: 18px;\n`;\n\ninterface HooksTodoHeadProps {\n  todos: Itodo[];\n}\n\nconst Todofooter = ({ todos }: HooksTodoHeadProps) => {\n  const undoneTasks = todos.filter((todo) => !todo.done);\n  return (\n    <TodoFooterBlock>\n      <LeftText className=\"tasks-left\">\n        {undoneTasks.length} items left\n      </LeftText>\n    </TodoFooterBlock>\n  );\n};\n\nexport default React.memo(Todofooter);\n","import { useTodo } from \"./TodoService\";\nimport TodoTemplate from \"./template/TodoTemplate\";\nimport TodoHead from \"./template/head/TodoHead\";\nimport TodoList from \"./template/list/TodoList\";\nimport TodoCreate from \"./template/create/TodoCreate\";\nimport TodoFooter from \"./template/footer/TodoFooter\";\nimport React from 'react';\n\nconst TodoContainer = () => {\n  const {\n    todoState,\n    nextIdState,\n    incrementNextId,\n    toggleTodo,\n    removeTodo,\n    createTodo,\n  } = useTodo();\n  \n  return (\n    <>\n      <TodoTemplate>\n        <TodoHead />\n        <TodoCreate\n          nextId={nextIdState}\n          createTodo={createTodo}\n          incrementNextId={incrementNextId}\n        />\n        <TodoList\n          toggleTodo={toggleTodo}\n          removeTodo={removeTodo}\n          todos={todoState}\n        />\n        <TodoFooter todos={todoState} />\n      </TodoTemplate>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport Spinner from \"./components/common/Spinner\";\nimport TodoContainer from \"./components/todo/TodoContainer\";\n\nfunction App() {\n  //@TODO login\n  let isLogged = true;\n\n  const RenderLayout = (\n    <div>\n      <TodoContainer />\n    </div>\n  );\n\n  return isLogged ? RenderLayout : <Spinner mask />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport mixin from 'styles/mixin';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #eeeeee;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <ThemeProvider theme={{ ...mixin }}>\n      <App />\n    </ThemeProvider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}